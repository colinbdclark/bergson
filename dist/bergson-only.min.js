/*! Bergson 0.11.1, Copyright 2016 Colin Clark | github.com/colinbdclark/bergson */

var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.clock",{gradeNames:["fluid.component"],freq:1,members:{time:0,freq:"{that}.options.freq",tickDuration:{expander:{funcName:"berg.clock.calcTickDuration",args:"{that}.freq"}}},invokers:{start:"fluid.identity()",tick:"fluid.notImplemented()",stop:"fluid.identity()"},events:{onTick:null},listeners:{onDestroy:["{that}.stop()"]}}),berg.clock.calcTickDuration=function(a){return 1/a},fluid.defaults("berg.clock.offline",{gradeNames:["berg.clock"],invokers:{tick:{funcName:"berg.clock.offline.tick",args:["{that}"]}}}),berg.clock.offline.tick=function(a){a.time=a.time+a.tickDuration,a.events.onTick.fire(a.time,a.freq)},fluid.defaults("berg.clock.realtime",{gradeNames:["berg.clock"],members:{time:"@expand:berg.clock.realtime.now()"},invokers:{tick:{funcName:"berg.clock.realtime.tick",args:["{that}"]}}}),berg.clock.realtime.now=function(){return performance.now()/1e3},"undefined"==typeof performance&&(berg.clock.realtime.now=function(){return Date.now()/1e3}),berg.clock.realtime.tick=function(a){a.time=berg.clock.realtime.now(),a.events.onTick.fire(a.time,a.freq)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.registerNamespace("berg"),berg.priorityQueue=function(){var a={items:[]};return a.push=function(b){if(b){if(void 0===b.priority)throw new Error("An item without a priority cannot be added to the queue.");a.items.push(b),a.bubbleUp(a.items.length-1)}},a.peek=function(){return a.items[0]},a.pop=function(){var b=a.items[0],c=a.items.pop();return a.items.length>0&&(a.items[0]=c,a.sinkDown(0)),b},a.remove=function(b){for(var c=a.items.length,d=0;c>d;d++)if(a.items[d]===b){var e=a.items.pop();if(d===c-1)break;a.items[d]=e,a.bubbleUp(d),a.sinkDown(d);break}},a.size=function(){return a.items.length},a.clear=function(){a.items.length=0},a.bubbleUp=function(b){for(var c=a.items[b];b>0;){var d=b-1>>1,e=a.items[d];if(e.priority<=c.priority)break;a.items[d]=c,a.items[b]=e,b=d}},a.sinkDown=function(b){for(var c,d=a.items.length,e=a.items[b];;){var f=2*(b+1),g=f-1,h=null;if(d>g&&(c=a.items[g],c.priority<e.priority&&(h=g)),d>f){var i=a.items[f],j=null===h?e:c;i.priority<j.priority&&(h=f)}if(null===h)break;a.items[b]=a.items[h],a.items[h]=e,b=h}},a}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";berg.getGlobalSelf=function(){return self},fluid.defaults("berg.postMessageSender",{gradeNames:["fluid.component"],members:{messageTarget:"@expand:berg.getGlobalSelf()"},invokers:{postMessage:"berg.postMessageSender.postMessage({arguments}.0, {arguments}.1, {that}.messageTarget)"}}),berg.postMessageSender.postMessage=function(a,b,c){if("string"!=typeof a)throw new Error("Can't post a message without a message type.");var d={type:a,args:b};c.postMessage(d)},fluid.defaults("berg.postMessageListener",{gradeNames:["fluid.component"],members:{messageSource:"@expand:berg.getGlobalSelf()"},events:{onError:null},listeners:{onCreate:["berg.postMessageListener.bind({that})"],onError:[{namespace:"failOnError",funcName:"fluid.fail"}]}}),berg.postMessageListener.bind=function(a){a.messageSource.addEventListener("message",function(b){var c=b.data;c.type||a.events.onError.fire("Received a remote message without a type. "+fluid.prettyPrintJSON(c));var d=a[c.type];a.options.invokers[c.type]&&d||a.events.onError.fire("Received a message of type "+c.type+", which did not resolve to a component invoker. Invokers: "+fluid.prettyPrintJSON(a.options.invokers));var e=fluid.makeArray(c.args);d.apply(null,e)},!1)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.scheduler",{gradeNames:["fluid.modelComponent"],members:{queue:"@expand:berg.priorityQueue()",lookahead:"@expand:berg.scheduler.calcLookahead({clock})"},model:{timeScale:1},components:{clock:{type:"berg.clock.offline"}},invokers:{start:"{clock}.start()",stop:"{clock}.stop()",tick:"berg.scheduler.tick({arguments}.0, {that})",schedule:"berg.scheduler.schedule({arguments}.0, {that})",once:"berg.scheduler.once({arguments}.0, {arguments}.1, {that})",repeat:{funcName:"berg.scheduler.repeat",args:["{arguments}.0","{arguments}.1","{arguments}.2","{arguments}.3","{that}"]},clear:"{that}.queue.remove({arguments}.0)",clearAll:"{that}.queue.clear()",setTimeScale:{changePath:"timeScale",value:"{arguments}.0"},scheduleEvent:{funcName:"berg.scheduler.scheduleEvent",args:["{arguments}.0","{that}"]},invokeCallback:{funcName:"berg.scheduler.invokeCallback",args:["{arguments}.0","{arguments}.1"]}},modelListeners:{timeScale:{funcName:"berg.scheduler.scaleEventTimes",args:["{that}.queue","{change}.value"],excludeSource:"init"}},listeners:{"{clock}.events.onTick":{func:"{scheduler}.tick"}}}),berg.scheduler.calcLookahead=function(a){return a.tickDuration/2},berg.scheduler.calcPriority=function(a,b,c){return a+b*c},berg.scheduler.scaleEventTimes=function(a,b){for(var c=0;c<a.items.length;c++){var d=a.items[c];d.priority=berg.scheduler.calcPriority(d.scheduledAt,d.time,b)}},berg.scheduler.expandRepeatingEventSpec=function(a,b){"number"!=typeof b.time&&(b.time=0),b.interval=1/b.freq,b.end="number"!=typeof b.end?1/0:b.end+a},berg.scheduler.validateEventSpec=function(a){if("repeat"===a.type&&"number"!=typeof a.freq)throw new Error("No freq was specified for scheduled event: "+fluid.prettyPrintJSON(a));if("number"!=typeof a.time)throw new Error("No time was specified for scheduled event: "+fluid.prettyPrintJSON(a))},berg.scheduler.invokeCallback=function(a,b){b.callback(a,b)},berg.scheduler.evaluateScoreEvent=function(a,b,c){c.invokeCallback(a,b),"repeat"===b.type&&b.end>a&&(b.priority=berg.scheduler.calcPriority(a,b.interval,c.model.timeScale),c.queue.push(b))},berg.scheduler.expandEventSpec=function(a){a.type||(a.type="once"),a.id||(a.id=fluid.allocateGuid())},berg.scheduler.scheduleEvent=function(a,b){var c=b.clock.time,d=b.model.timeScale;return berg.scheduler.expandEventSpec(a),"repeat"===a.type&&berg.scheduler.expandRepeatingEventSpec(c,a),"number"!=typeof a.scheduledAt&&(a.scheduledAt=c),berg.scheduler.validateEventSpec(a),a.priority=berg.scheduler.calcPriority(c,a.time,d),a.priority<=c?berg.scheduler.evaluateScoreEvent(c,a,b):b.queue.push(a),a},berg.scheduler.scheduleEvents=function(a,b){return a.forEach(function(a){b.scheduleEvent(a)}),a},berg.scheduler.schedule=function(a,b){return fluid.isArrayable(a)?berg.scheduler.scheduleEvents(a,b):b.scheduleEvent(a)},berg.scheduler.once=function(a,b,c){var d={type:"once",time:a,callback:b};return c.scheduleEvent(d)},berg.scheduler.repeat=function(a,b,c,d,e){var f={type:"repeat",freq:a,time:c,end:d,callback:b};return e.scheduleEvent(f)},berg.scheduler.tick=function(a,b){for(var c=b.queue.peek();c&&c.priority<=a+b.lookahead;)b.queue.pop(),berg.scheduler.evaluateScoreEvent(a,c,b),c=b.queue.peek()}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.scheduler.postMessage",{gradeNames:["berg.postMessageListener","berg.postMessageSender","berg.scheduler"],invokers:{invokeCallback:{funcName:"berg.scheduler.postMessage.post",args:["invokeCallback",["{arguments}.0","{arguments}.1"],"{that}"]}}}),berg.scheduler.postMessage.post=function(a,b,c){c.postMessage(a,b)},fluid.defaults("berg.scheduler.workerProxy",{gradeNames:["berg.scheduler","berg.postMessageListener","berg.postMessageSender"],scriptPath:"../../dist/bergson-all-worker.js",remoteSchedulerOptions:{components:{clock:{type:"berg.clock.setInterval",options:{freq:.01}}}},members:{eventSpecMap:{},worker:"@expand:berg.scheduler.workerProxy.createWorker({that}.options.scriptPath)",messageTarget:"{that}.worker",messageSource:"{that}.worker"},components:{clock:{type:"berg.clock.offline"}},invokers:{start:"{that}.postMessage(start)",stop:"{that}.postMessage(stop)",tick:"fluid.identity()",invokeCallback:"berg.scheduler.workerProxy.invokeCallback({arguments}.0, {arguments}.1, {that})",scheduleEvent:"berg.scheduler.workerProxy.scheduleEvent({arguments}.0, {that})",clear:"{that}.postMessage(clear, {arguments}.0)",clearAll:"{that}.postMessage(clearAll)",setTimeScale:"{that}.postMessage(setTimeScale, {arguments}.0)"},listeners:{onCreate:[{func:"{that}.postMessage",args:["create",["berg.scheduler.postMessage","{that}.options.remoteSchedulerOptions"]]}],onDestroy:[{"this":"{that}.worker",method:"terminate"}]}}),berg.scheduler.workerProxy.createWorker=function(a){return new Worker(a)},berg.scheduler.workerProxy.invokeCallback=function(a,b,c){var d=c.eventSpecMap[b.id],e=d.callback;"function"==typeof e?e(a,b):c.events.onError.fire("A callback function was not found for score event: "+fluid.prettyPrintJSON(d))},berg.scheduler.workerProxy.makeTransferrableCopy=function(a){var b=fluid.copy(a);return delete b.callback,b},berg.scheduler.workerProxy.scheduleEvent=function(a,b){berg.scheduler.expandEventSpec(a),b.eventSpecMap[a.id]=a;var c=berg.scheduler.workerProxy.makeTransferrableCopy(a);b.postMessage("scheduleEvent",c)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.clock.raf",{gradeNames:["berg.clock.realtime"],freq:60,members:{requestID:null},invokers:{start:{funcName:"berg.clock.raf.requestNextTick",args:["{that}"]},tick:{funcName:"berg.clock.raf.tick",args:["{that}","{arguments}.0"]},stop:{funcName:"berg.clock.raf.stop",args:["{that}"]}}}),berg.clock.raf.requestNextTick=function(a){a.requestID=requestAnimationFrame(a.tick)},berg.clock.raf.tick=function(a,b){berg.clock.raf.requestNextTick(a);var c=b/1e3;a.time=c,a.events.onTick.fire(c,a.freq)},berg.clock.raf.stop=function(a){cancelAnimationFrame(a.requestID)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.clock.setInterval",{gradeNames:["berg.clock.realtime"],freq:10,members:{intervalID:null},invokers:{start:{funcName:"berg.clock.setInterval.start",args:["{that}"]},stop:{funcName:"berg.clock.setInterval.stop",args:["{that}"]}}}),berg.clock.setInterval.start=function(a){a.intervalID=setInterval(a.tick,1e3/a.freq)},berg.clock.setInterval.stop=function(a){clearInterval(a.intervalID)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.clock.logger",{gradeNames:["fluid.component"],numTicksToLog:72e3,members:{tickCounter:0,lastTickTime:null,interval:0,intervalLog:"@expand:berg.clock.logger.initLog({that}.options.numTicksToLog)"},invokers:{log:"berg.clock.logger.log({that}, {clock})"},listeners:{"{clock}.events.onTick":["{that}.log()"]}}),berg.clock.logger.initLog=function(a){return new Float32Array(a)},berg.clock.logger.log=function(a,b){return null===a.lastTickTime?void(a.lastTickTime=b.time):(a.tickCounter++,a.interval=b.time-a.lastTickTime,a.lastTickTime=b.time,void(a.tickCounter<a.options.numTicksToLog&&(a.intervalLog[a.tickCounter]=a.interval)))}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";berg.worker=function(a){var b,c,d=typeof a;if("function"===d)a="("+a.toString()+")();";else if("string"!==d)throw new Error("A berg.worker must be initialized with a String or a Function.");return window.Blob?(c=new Blob([a],{type:"text/javascript"}),b=(window.URL||window.webkitURL).createObjectURL(c)):b="data:text/javascript;base64,"+window.btoa(a),new Worker(b)},fluid.defaults("berg.clock.workerSetInterval",{gradeNames:["berg.clock.realtime","berg.postMessageListener","berg.postMessageSender"],freq:10,members:{worker:"@expand:berg.clock.workerSetInterval.createWorker()",messageTarget:"{that}.worker",messageSource:"{that}.worker"},invokers:{start:"{that}.events.onStart.fire",stop:"{that}.events.onStop.fire"},events:{onStart:null,onStop:null},listeners:{onStart:[{func:"{that}.postMessage",args:["start",{freq:"{that}.freq"}]}],onStop:["{that}.postMessage(stop)",{"this":"{that}.worker",method:"terminate"}]}}),berg.clock.workerSetInterval.createWorker=function(){return berg.worker(berg.clock.workerSetInterval.workerImpl)},berg.clock.workerSetInterval.workerImpl=function(){var a={};a.workerClock=function(a){var b={options:a||{},intervalID:null};return b.start=function(){b.intervalID=setInterval(b.tick,1e3/b.options.freq)},b.tick=function(){self.postMessage({type:"tick"})},b.stop=function(){clearInterval(b.intervalID)},b},self.addEventListener("message",function(b){"start"===b.data.type?(a.clock=a.workerClock({freq:b.data.value}),a.clock.start()):"stop"===b.data.type&&(a.clock&&a.clock.stop(),self.close())},!1)}}();var fluid=fluid||require("infusion"),berg=fluid.registerNamespace("berg");!function(){"use strict";fluid.defaults("berg.clock.audioContext",{gradeNames:["berg.clock.realtime"],blockSize:256,mergePolicy:{"members.context":"noexpand"},members:{context:"@expand:berg.clock.audioContext.createContext()",freq:"@expand:berg.clock.audioContext.calcFreq({that}.context, {that}.options.blockSize)",time:"@expand:berg.clock.audioContext.now({that}.context)"},invokers:{tick:{funcName:"berg.clock.audioContext.tick",args:["{that}"]}}}),berg.clock.audioContext.createContext=function(){var a=window.AudioContext||window.webkitAudioContext;return new a},berg.clock.audioContext.calcFreq=function(a,b){return a.sampleRate/b},berg.clock.audioContext.now=function(a){return a.currentTime},berg.clock.audioContext.tick=function(a){a.time=a.context.currentTime,a.events.onTick.fire(a.time,a.freq)},fluid.defaults("berg.clock.autoAudioContext",{gradeNames:["berg.clock.audioContext"],mergePolicy:{"members.scriptNode":"noexpand"},members:{scriptNode:{expander:{funcName:"berg.clock.autoAudioContext.createScriptNode",args:["{that}.context","{that}.options.blockSize","{that}.tick"]}}},invokers:{start:{funcName:"berg.clock.autoAudioContext.start",args:["{that}.context","{that}.scriptNode"]},stop:{funcName:"berg.clock.autoAudioContext.stop",args:["{that}.context","{that}.scriptNode"]}}}),berg.clock.autoAudioContext.createScriptNode=function(a,b,c){var d=a.createScriptProcessor(b,1,1);return d.onaudioprocess=c,d},berg.clock.autoAudioContext.start=function(a,b){b.connect(a.destination)},berg.clock.autoAudioContext.stop=function(a,b){b.disconnect(a.destination),b.onaudioprocess=void 0}}();